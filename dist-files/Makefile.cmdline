#
#  Example Makefile for building a program with embedded Duktape.
#  The example program here is the Duktape command line tool.
#

DUKTAPE_SOURCES = src/duktape.o

CMDLINE_SOURCES = \
	examples/cmdline/duk_cmdline.o

CC = gcc
LD = $(CC)
CFLAGS = -Os -pedantic -std=c99 -Wall -fstrict-aliasing -fomit-frame-pointer
CFLAGS += -I./examples/cmdline -I./src   # duktape.h and duk_config.h must be in include path
LDFLAGS = -lm
EXTRA_TARGETS =

RM = rm -f

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Enable print() and alert() for command line using an optional extra module.
CFLAGS += -DDUK_CMDLINE_PRINTALERT_SUPPORT -I./extras/print-alert
CMDLINE_SOURCES += extras/print-alert/duk_print_alert.o

# Enable console object (console.log() etc) for command line.
CFLAGS += -DDUK_CMDLINE_CONSOLE_SUPPORT -I./extras/console
CMDLINE_SOURCES += extras/console/duk_console.o

# Enable Duktape.Logger for command line.
CFLAGS += -DDUK_CMDLINE_LOGGING_SUPPORT -I./extras/logging
CMDLINE_SOURCES += extras/logging/duk_logging.o

# Enable Duktape 1.x module loading for command line.
CFLAGS += -DDUK_CMDLINE_MODULE_SUPPORT -I./extras/module-duktape
CMDLINE_SOURCES += extras/module-duktape/duk_module_duktape.o

# If you want linenoise, you can enable these.  At the moment linenoise
# will cause some harmless compilation warnings.
ifeq ($(LINENOISE),1)
	CFLAGS += -DDUK_CMDLINE_FANCY -I./linenoise -D_POSIX_C_SOURCE=200809L 
	CMDLINE_SOURCES += linenoise/linenoise.o
	EXTRA_TARGETS += linenoise
endif

# Use the tools/configure.py utility to modify Duktape default configuration:
# http://duktape.org/guide.html#compiling
# http://wiki.duktape.org/Configuring.html

duk: $(EXTRA_TARGETS) $(DUKTAPE_SOURCES) $(CMDLINE_SOURCES)
	$(LD) -o $@ $(DUKTAPE_SOURCES) $(CMDLINE_SOURCES) $(LDFLAGS)

all: duk

clean:
	$(RM) $(DUKTAPE_SOURCES) $(CMDLINE_SOURCES) duk
	$(RM) -r linenoise

linenoise:
	git clone -b fix-compile-warnings-duktape https://github.com/svaarala/linenoise.git
