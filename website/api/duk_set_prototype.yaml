name: duk_set_prototype

proto: |
  void duk_set_prototype(duk_context *ctx, duk_idx_t idx);

stack: |
  [ ... val! ... proto! ] -> [ ... val! ... ]

summary: |
  <p>Set the internal prototype of the value at <code>idx</code> to the value
  at stack top If the target value is not an object or the prototype value is
  not an object, <code>undefined</code>, or <code>null</code>, an error is
  thrown.</p>

  <div class="note">
  Unlike Ecmascript prototype manipulation primitives, this API call allows
  creation of a prototype loop.  Calling code should always avoid creating a
  prototype loop: although Duktape detects long or looped prototype chains
  and throws an error when it encounters one, such behavior is only intended
  as a last resort to avoid an infinite loop.
  </div>

example: |
  /* Create new object, internal prototype is Object.prototype by default. */
  duk_push_object(ctx);

  /* Change the object's internal prototype to object at index -3. */
  duk_dup(ctx, -3);
  duk_set_prototype(ctx, -2);  /* [ obj proto ] -> [ obj ] */

tags:
  - object
  - prototype

seealso:
  - duk_get_prototype

introduced: 1.0.0
